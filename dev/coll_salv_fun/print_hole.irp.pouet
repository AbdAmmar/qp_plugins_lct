program print_hole
 implicit none
 BEGIN_DOC
 ! This programs writes the effective RS-DFT Hamiltonian into the EZFIO folder. 
 ! The next programs that will run unto the EZFIO folder will, by default, 
 !
 ! have the one- and two-body integrals loaded from the EZFIO data. 
 END_DOC
 read_wf = .true.
 touch read_wf
 ! total one-e integrals 
 io_mo_one_e_integrals = "None"
 touch io_mo_one_e_integrals  
 ! Vne integrals on the MO basis 
 io_mo_integrals_n_e = "None"
 touch io_mo_integrals_n_e
 ! kinetic integrals on the MO basis 
 io_mo_integrals_kinetic = "None"
 touch io_mo_integrals_kinetic 
 ! Vne integrals on the AO basis 
 io_ao_integrals_n_e = "None"
 touch io_ao_integrals_n_e 
 ! kinetic integrals on the AO basis 
 io_ao_integrals_kinetic = "None"
 touch io_ao_integrals_kinetic 

 ! regular 1/r12 integrals  on the MO basis
 io_mo_two_e_integrals = "None"
 touch io_mo_two_e_integrals
 ! regular 1/r12 integrals  on the AO basis
 io_ao_two_e_integrals = "None"
 touch io_ao_two_e_integrals
 ! integral of the effective potential 
! io_mo_int_mu_of_r = "None" 
! touch io_mo_int_mu_of_r
 call routine_print
end


subroutine routine_print
 implicit none
 integer :: i,ntheta,istate
 double precision :: r1(3),r2(3),mu_of_r,f_psi,rho2,n2_psi
 double precision :: r,dtheta,pi,theta,n2_hf,r12,jastrow,slater_ten_no
 double precision, allocatable :: mos_array_r1(:) , mos_array_r2(:), gam
 allocate(mos_array_r1(mo_num) , mos_array_r2(mo_num) )

 istate = 1
 ntheta = 200
 pi = dacos(-1.d0)
 dtheta = 2.d0 * pi / dble(ntheta)
 r = 0.5d0 

 r1 = 0.d0
 r1(1) = r
 call give_mu_of_r_cas(r1,istate,mu_of_r,f_psi,rho2)
 call give_all_mos_at_r(r1,mos_array_r1) 
 r2 = 0.d0 
 theta = -pi
 gam = 1.2d0
 do i = 1, ntheta
  r2(1) = r * dcos(theta)
  r2(2) = r * dsin(theta)
  r12 = dsqrt( (r1(1) - r2(1))**2.d0 +  (r1(2) - r2(2))**2.d0 + (r1(3) - r2(2))**2.d0 )
  jastrow = slater_ten_no(r12,gam)
  call give_all_mos_at_r(r2,mos_array_r2) 
  n2_hf = mos_array_r1(1)**2.d0 * mos_array_r2(1)**2.d0
  call give_n2_cas(r1,r2,istate,n2_psi)
  n2_psi = n2_psi !* 2.d0
  theta += dtheta
  write(33,'(100(F16.10,X))')theta, r12,dsqrt(n2_hf),dsqrt(n2_psi),jastrow, dsqrt(n2_hf) * jastrow, dsqrt(n2_psi) * jastrow
!   , n2_hf ,n2_psi 
 enddo
end
